<!-- Credit: Tutorial from https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript -->
<style>
  * {padding: 0; margin: 0;}
  canvas {background: #eee; display: block;}
</style>

<div class='container'>

  <canvas id='myCanvas' width='480' height='320'></canvas>

  <button onclick='restartGame();'>Restart Game </button>
  <button onclick='pauseGame();' id='pause'>Pause Game </button>

  <script>

    var canvas = document.getElementById('myCanvas');
    var ctx = canvas.getContext('2d');

    var score = 0;

    //x and y coords of the ball
    var x = canvas.width/2;
    var y = canvas.height-30;

    var dx = 2;
    var dy = -2;

    var ballRadius = 10;

    var playerLives = 3;

    var paddleHeight = 10;
    var paddleWidth = 75;
    var paddleX = (canvas.width-paddleWidth)/2;
    var paddleY = canvas.height-paddleHeight

    var leftPressed = false;
    var rightPressed = false;

    var brickRowCount = 3;
    var brickColumnCount = 5;
    var brickWidth = 75;
    var brickHeight = 20;
    var brickPadding = 10;
    var brickOffSetTop = 30;
    var brickOffsetLeft = 30;

     var animationFrame;

    var paused = false;

    var bricks = [];

    for (var c = 0; c < brickColumnCount; c++){
      bricks[c] = [];
        for (var r = 0; r < brickRowCount; r++) {
          bricks[c][r] = { x: 0, y: 0, hitStatus: 1};
        }
    }

    document.addEventListener("keydown", keyDownHandler, false);
    document.addEventListener("keyup", keyUpHandler, false);

    document.addEventListener('mousemove', mouseMoveHandler, false);

    function restartGame() {
      document.location.reload();
    }

    function pauseGame() {
      if (paused) {
        animationFrame = requestAnimationFrame(draw);
        document.getElementById('pause').innerHTML = 'Pause Game';
        paused = false;
      } else {
        cancelAnimationFrame(animationFrame);
        document.getElementById('pause').innerHTML = 'Play';
        paused = true;
      }
    }

    function mouseMoveHandler(e) {
      var relativeX = e.clientX - canvas.offsetLeft;
      if (relativeX > 0 && relativeX < canvas.width) {
        paddleX = relativeX - paddleWidth/2;
      }
    }

    function keyDownHandler(e) {
      if (e.key == 'Right' || e.key == 'ArrowRight') {
        rightPressed = true;
      }
      else if (e.key == 'Left' || e.key == 'ArrowLeft') {
        leftPressed = true;
      }
    }

    function keyUpHandler(e) {
      if (e.key == 'Right' || e.key == 'ArrowRight') {
        rightPressed = false;
      }
      else if (e.key == 'Left' || e.key == 'ArrowLeft') {
        leftPressed = false;
      }
    }

    function collisionDetection() {
      for (var c = 0; c < brickColumnCount; c++) {
        for (var r = 0; r < brickRowCount; r++) {
          var b = bricks[c][r];

          if (b.hitStatus == 0) {
            //Turn opposite direction if ball hits brick
            if (x > b.x && x < b.x + brickWidth) {
              if (y > b.y && y < b.y + brickHeight) {
                dy = -dy;
                score++;
                b.hitStatus = -1;
              }
            }
          }
          else if (b.hitStatus == 1) {
            //Turn opposite direction if ball hits brick
            if (x > b.x && x < b.x + brickWidth) {
              if (y > b.y && y < b.y + brickHeight) {
                dy = -dy;
                score++;
                b.hitStatus = 0;
              }
            }
          }
        }
      }
    }

    function drawLives() {
      ctx.font = '16px Arial';
      ctx.fillStyle = '#0095DD';
      ctx.fillText('Lives: ' + playerLives, canvas.width-65, 20);
    }

    function drawScore() {
      ctx.font = '16px Arial';
      ctx.fillStyle = '#0095DD';
      ctx.fillText("Score: "+score, 8, 20);
    }

    function drawBall(){
      ctx.beginPath();
      ctx.arc(x, y, ballRadius, 0, Math.PI*2);
      ctx.fillStyle = "#0095DD";
      ctx.fill();
      ctx.closePath();
    }

    function drawPaddle() {
      ctx.beginPath();
      ctx.rect(paddleX, paddleY, paddleWidth, paddleHeight);
      ctx.fillStyle = "#0095DD";
      ctx.fill();
      ctx.closePath();
    }

    function drawBricks(){
      for (var c = 0; c < brickColumnCount; c++) {
        for (var r = 0; r < brickRowCount; r++) {
          if (bricks[c][r].hitStatus >= 0) {

            var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;
            var brickY = (r * (brickHeight + brickPadding)) + brickOffSetTop;

            bricks[c][r].x = brickX;
            bricks[c][r].y = brickY;

            ctx.beginPath();
            ctx.rect(brickX, brickY, brickWidth, brickHeight);
            if (bricks[c][r].hitStatus == 1) {
              ctx.fillStyle = "#AA5733";
            }
            else if (bricks[c][r].hitStatus == 0) {
              ctx.fillStyle = '#5C301D';
            }
            ctx.fill();
            ctx.closePath();
          }
        }
      }
    }

    function draw() {
      //x,y coords of top left and bottom right
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBall();
      drawPaddle();
      collisionDetection();
      drawBricks();
      drawLives();
      drawScore();

      animationFrame = requestAnimationFrame(draw);

      //If the ball reaches the top or bottom edge
      if ( y + dy < ballRadius){
        dy = -dy;
      } else if (y + dy > canvas.height - ballRadius) {
        //Ball's x coords are within paddle width range
        if (x > paddleX && x < paddleX + paddleWidth) {
          dy = -dy;
        }
        else {
          playerLives--;

          if (!playerLives) {
            ctx.beginPath();
            ctx.font = "50px Arial";
            ctx.strokeStyle = 'black';
            ctx.lineWidth = 10;
            ctx.strokeText('Game Over', 110, 100);
            ctx.fillStyle = "#FF2211";
            ctx.fillText('Game Over', 110, 100);
            ctx.closePath();
            document.getElementById('pause').style.display = 'none';
            cancelAnimationFrame(animationFrame);
          } else {
            x = canvas.width/2;
            y = canvas.height - 30;
            dx = 2;
            dy = -2;
            paddleX = (canvas.width - paddleWidth) / 2;
          }
        }
      }

      if (score == (2 * brickRowCount * brickColumnCount)) {
        ctx.beginPath();
        ctx.font = "50px Arial";
        ctx.strokeStyle = 'black';
        ctx.lineWidth = 10;
        ctx.strokeText('Yay you win!', 110, 100);
        ctx.fillStyle = "Green";
        ctx.fillText('Yay you win!', 110, 100);
        ctx.closePath();
        document.getElementById('pause').style.display = 'none';
        cancelAnimationFrame(animationFrame);
      }

      //Bounce off the left and right side of wall
      if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {
        dx = -dx;
      }

      if (rightPressed && paddleX < canvas.width - paddleWidth) {
        paddleX += 10;
      }
      else if (leftPressed && paddleX > 0) {
        paddleX -= 10;
      }

      x += dx;
      y += dy;
    }

    draw();

  </script>
</div>
