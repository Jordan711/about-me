<!-- Credit: Tutorial from https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript -->
<style>
  * {padding: 0; margin: 0;}
  canvas {background: #eee; display: block;}
</style>

<div class='container'>

  <canvas id='myCanvas' width='480' height='320'></canvas>


  <script>

    var canvas = document.getElementById('myCanvas');
    var ctx = canvas.getContext('2d');

    var x = canvas.width/2;
    var y = canvas.height-30;

    var dx = 2;
    var dy = -2;

    var ballRadius = 10;

    var paddleHeight = 10;
    var paddleWidth = 75;
    var paddleX = (canvas.width-paddleWidth)/2;

    var leftPressed = false;
    var rightPressed = false;

    var brickRowCount = 3;
    var brickColumnCount = 5;
    var brickWidth = 75;
    var brickHeight = 20;
    var brickPadding = 10;
    var brickOffSetTop = 30;
    var brickOffsetLeft = 30;

    var bricks = [];

    for (var c = 0; c < brickColumnCount; c++){
      bricks[c] = [];
        for (var r = 0; r < brickRowCount; r++) {
          bricks[c][r] = { x: 0, y: 0};
        }
    }

    document.addEventListener("keydown", keyDownHandler, false);
    document.addEventListener("keyup", keyUpHandler, false);

    function restartGame() {
      document.location.reload();
    }

    function keyDownHandler(e) {
      if (e.key == 'Right' || e.key == 'ArrowRight') {
        rightPressed = true;
      }
      else if (e.key == 'Left' || e.key == 'ArrowLeft') {
        leftPressed = true;
      }
    }

    function keyUpHandler(e) {
      if (e.key == 'Right' || e.key == 'ArrowRight') {
        rightPressed = false;
      }
      else if (e.key == 'Left' || e.key == 'ArrowLeft') {
        leftPressed = false;
      }
    }

    function drawBall(){
      ctx.beginPath();
      ctx.arc(x, y, ballRadius, 0, Math.PI*2);
      ctx.fillStyle = "#0095DD";
      ctx.fill();
      ctx.closePath();
    }

    function drawPaddle() {
      ctx.beginPath();
      ctx.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);
      ctx.fillStyle = "#0095DD";
      ctx.fill();
      ctx.closePath();
    }

    function drawBricks(){
      for (var c = 0; c < brickColumnCount; c++) {
        for (var r = 0; r < brickRowCount; r++) {
          var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;
          var brickY = (r * (brickHeight + brickPadding)) + brickOffSetTop;

          bricks[c][r].x = brickX;
          bricks[c][r].y = brickY;

          ctx.beginPath();
          ctx.rect(brickX, brickY, brickWidth, brickHeight);
          ctx.fillStyle = "#AA5733";
          ctx.fill();
          ctx.closePath();

        }
      }
    }

    function draw() {
      //x,y coords of top left and bottom right
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBall();
      drawPaddle();
      drawBricks();

      //If the ball reaches the top or bottom edge
      if ( y + dy < ballRadius){
        dy = -dy;
      } else if (y + dy > canvas.height - ballRadius) {
        //Ball's x coords are within paddle width range
        if (x > paddleX && x < paddleX + paddleWidth) {
          dy = -dy;
        }
        else {
          ctx.beginPath();
          ctx.font = "50px Arial";
          ctx.strokeStyle = 'black';
          ctx.lineWidth = 10;
          ctx.strokeText('Game Over', 110, 100);
          ctx.fillStyle = "#FF2211";
          ctx.fillText('Game Over', 110, 100);
          ctx.closePath();
          clearInterval(interval);
        }
      }

      //Bounce off the left and right side of wall
      if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {
        dx = -dx;
      }

      if (rightPressed && paddleX < canvas.width - paddleWidth) {
        paddleX += 4;
      }
      else if (leftPressed && paddleX > 0) {
        paddleX -= 4;
      }

      x += dx;
      y += dy;
    }

    var interval = setInterval(draw, 10);
  </script>
</div>
